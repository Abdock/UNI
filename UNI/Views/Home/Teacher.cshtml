@using UNI.Data
@using Microsoft.EntityFrameworkCore
@model UNI.ViewModels.LoginModel;
@{
    ViewData["Title"] = "Teacher page";
    var groups = new List<Group>();
    var db = (ApplicationDbContext) ViewData["db"];
    var conn = db.Database.GetDbConnection();
    await conn.OpenAsync();
    var cmd = conn.CreateCommand();
    cmd.CommandText = $"SELECT * FROM get_teachers_group({Model.Login})";
    var reader = await cmd.ExecuteReaderAsync();
    while (await reader.ReadAsync())
    {
        groups.Add(new Group {group_id = (long) reader[0], group_name = (string) reader[1], curator_id = (long) reader[2]});
    }
    await reader.DisposeAsync();
}
<ul>
    @{
        foreach (var group in groups)
        {
            <span class="h1">@group.group_name</span>
                <li>
                    @{
                        cmd.CommandText = $"SELECT * FROM group_subjects({group.group_id})";
                        List<Subject> subjects = new List<Subject>();
                        reader = await cmd.ExecuteReaderAsync();
                        while (await reader.ReadAsync())
                        {
                            subjects.Add(new Subject {subject_id = (long) reader[0], subject_name = (string) reader[1], credits = (int) reader[2]});
                        }
                        await reader.DisposeAsync();
                        int num = 1;
                        foreach (var subject in subjects)
                        {
                            cmd.CommandText = $"SELECT * FROM ratio_of_student_in_group({group.group_id}, {subject.subject_id}, 90, 100)";
                            var exc = (double) await cmd.ExecuteScalarAsync();
                            cmd.CommandText = $"SELECT * FROM ratio_of_student_in_group({group.group_id}, {subject.subject_id}, 70, 89)";
                            var good = (double) await cmd.ExecuteScalarAsync();
                            cmd.CommandText = $"SELECT * FROM ratio_of_student_in_group({group.group_id}, {subject.subject_id}, 50, 69)";
                            var middle = (double) await cmd.ExecuteScalarAsync();
                            cmd.CommandText = $"SELECT * FROM ratio_of_student_in_group({group.group_id}, {subject.subject_id}, 0, 50)";
                            var low = (double) await cmd.ExecuteScalarAsync();
                            <section class="ac-container">
                                <div>
                                    <input id="ac-@num" name="accordion-@num" type="checkbox" checked />
                                    <label for="ac-@num">@subject.subject_name:</label>
                                    <article>
                                        <p>Excellent: @exc </p>
                                    </article>
                                    <article>
                                        <p>Good: @good</p>
                                    </article>   
                                    <article>
                                        <p>Middle: @middle</p>
                                    </article>
                                    <article>
                                        <p>Low: @low</p>
                                    </article>
                                    <article>
                                        <p>Unknown: @(1 - (exc + good + middle + low))</p>
                                    </article>
                                </div>
                 
                            </section>
                            ++num;
                        }
                    }
                </li>
            
        }
    }
</ul>
